{"version":3,"file":"static/js/9814.7d2fb450.chunk.js","mappings":"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","sources":["hooks/useInput.js","components/Get In Touch/ContactForm.js","components/UI/Button.js","webpack://personal-portfolio/./src/components/Get In Touch/contactForm.module.css?3b99","webpack://personal-portfolio/./src/components/Get In Touch/GetInTouch.module.css?1255","components/Data/PersonalData.js","../node_modules/@mui/icons-material/Send.js","webpack://personal-portfolio/./src/components/UI/button.module.css?3058","../node_modules/@mui/icons-material/Call.js","components/Get In Touch/GetInTouch.js","../node_modules/@mui/icons-material/LocationOn.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput=(validateValue)=>{\r\n    const [enteredValue,setEnteredValue]=useState('');\r\n    const [isTouched,setIsTouched]=useState(false);\r\n\r\n    const valueIsValid=validateValue(enteredValue);\r\n    const hasError=!valueIsValid&&isTouched;\r\n\r\n    const valueChangeHandler=(event)=>{\r\n        setEnteredValue(event.target.value);\r\n    }\r\n    const inputBlurHandler=(event)=>{\r\n        setIsTouched(true);\r\n    }\r\n    const reset=()=>{\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    }\r\n    return{\r\n        value:enteredValue,\r\n        isValid:valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n};\r\nexport default useInput;","import React, { Fragment, useState } from \"react\";\r\nimport { useBlocker } from \"react-router-dom\"; // Replace Prompt with useBlocker\r\n\r\nimport classes from \"./contactForm.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ContactForm = ({ content }) => {\r\n    const [isEntering, setIsEntering] = useState(false);\r\n\r\n    const { value: enteredName,\r\n        hasError: nameInputHasError,\r\n        isValid: enteredNameIsValid,\r\n        valueChangeHandler: nameChangedHandler,\r\n        inputBlurHandler: nameBlurHandler,\r\n    } = useInput(value => value.trim() !== '');\r\n\r\n    const { value: enteredPhone,\r\n        hasError: phoneInputHasError,\r\n        isValid: enteredPhoneIsValid,\r\n        valueChangeHandler: phoneChangedHandler,\r\n        inputBlurHandler: phoneBlurHandler,\r\n    } = useInput(value => value.trim().length >= 10);\r\n\r\n    const { value: enteredEmail,\r\n        hasError: emailInputHasError,\r\n        isValid: enteredEmailIsValid,\r\n        valueChangeHandler: emailChangedHandler,\r\n        inputBlurHandler: emailBlurHandler,\r\n    } = useInput(value => value.includes('@'));\r\n\r\n    const { value: enteredMessage,\r\n        hasError: messageInputHasError,\r\n        isValid: enteredMessageIsValid,\r\n        valueChangeHandler: messageChangedHandler,\r\n        inputBlurHandler: messageBlurHandler,\r\n    } = useInput(value => value.trim().length >= 10);\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredNameIsValid && enteredEmailIsValid && enteredMessageIsValid && enteredPhoneIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const [btnText, setBtnText] = useState('Send Message');\r\n    const [isSent, setIsSent] = useState(false);\r\n    const [enteredLName, setEnteredLName] = useState('');\r\n\r\n    const lastNameChangeHandler = (event) => {\r\n        setEnteredLName(event.target.value);\r\n    }\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (!enteredNameIsValid || !enteredEmailIsValid || !enteredMessageIsValid || !enteredPhoneIsValid) {\r\n            return;\r\n        }\r\n        const message = {\r\n            time: new Date().toUTCString(),\r\n            name: enteredName + \" \" + enteredLName,\r\n            email: enteredEmail,\r\n            phone: enteredPhone,\r\n            message: enteredMessage,\r\n        }\r\n        finishEnteringHandler();\r\n        sendMessageHanlder(message);\r\n    }\r\n\r\n    const sendMessageHanlder = async (message) => {\r\n        setBtnText((prevValue) => 'Sending ...');\r\n        await fetch('https://react-redux-47ef8-default-rtdb.firebaseio.com/portfolio-messages.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify(message)\r\n        });\r\n        setIsSent(true);\r\n        setBtnText((prevValue) => 'Message Sent');\r\n    }\r\n\r\n    const finishEnteringHandler = () => {\r\n        setIsEntering(false);\r\n    }\r\n\r\n    const formFocussedHandler = () => {\r\n        setIsEntering(true);\r\n    };\r\n\r\n    // Use the useBlocker hook\r\n    useBlocker(() => {\r\n        if (isEntering) {\r\n            return !window.confirm(\r\n                'Are You Sure You Want To Leave? All your entered data will be lost!'\r\n            );\r\n        }\r\n        return false;\r\n    }, isEntering);\r\n\r\n    const nameInputClasses = nameInputHasError ? `${classes.Inputs} ${classes.invalidInput}` : classes.Inputs;\r\n    const emailInputClasses = emailInputHasError ? `${classes.Inputs} ${classes.invalidInput}` : classes.Inputs;\r\n    const phoneInputClasses = phoneInputHasError ? `${classes.Inputs} ${classes.invalidInput}` : classes.Inputs;\r\n    const messageInputClasses = messageInputHasError ? `${classes.Inputs} ${classes.invalidInput}` : classes.Inputs;\r\n    const formClasses = isSent ? `${classes.contactForm} ${classes.sent}` : classes.contactForm;\r\n\r\n    const nonThemeColor = useSelector(state => state.nonThemeColor);\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.contactFormCard}>\r\n                <h1 style={{ color: nonThemeColor }}>Leave A Message</h1>\r\n                <form onFocus={formFocussedHandler} action=\"\" onSubmit={formSubmitHandler} className={formClasses}>\r\n                    <input value={enteredName}\r\n                        onBlur={nameBlurHandler}\r\n                        onChange={nameChangedHandler}\r\n                        type=\"text\"\r\n                        className={nameInputClasses}\r\n                        placeholder=\"First Name\"\r\n                        disabled={isSent}\r\n                    />\r\n                    <input type=\"text\"\r\n                        id=\"lName\"\r\n                        value={enteredLName}\r\n                        onChange={lastNameChangeHandler}\r\n                        className={classes.Inputs}\r\n                        placeholder=\"Last Name (optional)\"\r\n                        disabled={isSent}\r\n                    />\r\n\r\n                    <input value={enteredEmail}\r\n                        onBlur={emailBlurHandler}\r\n                        onChange={emailChangedHandler}\r\n                        type=\"email\"\r\n                        className={emailInputClasses}\r\n                        placeholder=\"Email\"\r\n                        disabled={isSent}\r\n                    />\r\n                    <input value={enteredPhone}\r\n                        onBlur={phoneBlurHandler}\r\n                        onChange={phoneChangedHandler}\r\n                        type=\"text\"\r\n                        className={phoneInputClasses}\r\n                        placeholder=\"Phone\"\r\n                        minLength={10}\r\n                        maxLength={12}\r\n                        disabled={isSent}\r\n                    /><br />\r\n                    <textarea\r\n                        value={enteredMessage}\r\n                        onBlur={messageBlurHandler}\r\n                        onChange={messageChangedHandler}\r\n                        className={messageInputClasses}\r\n                        name=\"message\"\r\n                        placeholder=\"Message\"\r\n                        disabled={isSent}\r\n                    ></textarea>\r\n                    <div className={classes.sendBtn}>\r\n                        <Button type=\"submit\" disabled={!formIsValid || isSent}>{btnText}</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport classes from \"./button.module.css\";\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type || 'button'}\r\n      className={`${classes.btn} ${props.className}`}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"contactFormCard\":\"contactForm_contactFormCard__OWxYQ\",\"contactForm\":\"contactForm_contactForm__N2YuO\",\"Inputs\":\"contactForm_Inputs__Q7zyT\",\"sendBtn\":\"contactForm_sendBtn__eAZPB\",\"invalidInput\":\"contactForm_invalidInput__DN5ex\",\"sent\":\"contactForm_sent__HjgTl\"};","// extracted by mini-css-extract-plugin\nexport default {\"getInTouch\":\"GetInTouch_getInTouch__8uivw\",\"getInTouchCard\":\"GetInTouch_getInTouchCard__S569U\",\"contactCard\":\"GetInTouch_contactCard__7Fszd\",\"contactIcon\":\"GetInTouch_contactIcon__sO6Jz\",\"contactValue\":\"GetInTouch_contactValue__IdTCl\"};","const PersonalData = {\r\n    firstName: \"Daniel\",\r\n    lastName: \"Wang\",\r\n    nickName:\"<  Doctor Dan >\",\r\n    mobNo:\"+1 647-974-1857\",\r\n    email:\"danw.ca@gmail.com\",\r\n    address:\"Canada\",\r\n    aboutMe:\"Hi Everyone, I am Daneil Wang from Toronto, Canada. Worked with libraries & frameworks like ReactJS, NodeJS. Have a keen knowledge of databases like MySQL, MongoDB and Firebase. Eager to contribute to innovative projects and gain hands-on experience in a dynamic and collaborative\",\r\n    resumeLink:'https://drive.google.com/file/d/1vfnzDcN4uATaNZ7cc9kdKvep9ZBUN_be/view?usp=sharing',\r\n    imageUrl:''\r\n}\r\nexport const autoTypeData=['3rd Year IT Grad', 'MERN Stack Developer','Flutter App Developer', 'Open Source Contributor'];\r\nexport default PersonalData;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__PMIVv\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.01 15.38c-1.23 0-2.42-.2-3.53-.56-.35-.12-.74-.03-1.01.24l-1.57 1.97c-2.83-1.35-5.48-3.9-6.89-6.83l1.95-1.66c.27-.28.35-.67.24-1.02-.37-1.11-.56-2.3-.56-3.53 0-.54-.45-.99-.99-.99H4.19C3.65 3 3 3.24 3 3.99 3 13.28 10.73 21 20.01 21c.71 0 .99-.63.99-1.18v-3.45c0-.54-.45-.99-.99-.99z\"\n}), 'Call');\nexports.default = _default;","import React from \"react\";\r\n\r\nimport classes from \"./GetInTouch.module.css\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CallIcon from '@mui/icons-material/Call';\r\n\r\nimport PersonalData from \"../Data/PersonalData\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst data = [PersonalData.address,PersonalData.email, PersonalData.mobNo];\r\n\r\nconst GetInTouch = (props) => {\r\n\r\n    const uiColor=useSelector(state=>state.uiColor);\r\n    const nonThemeColor=useSelector(state=>state.nonThemeColor);\r\n    const Icons=[<LocationOnIcon fontSize=\"large\"/>,<SendIcon fontSize=\"large\"/>,<CallIcon fontSize=\"large\"/>];\r\n\r\n    const contactDetails = data.map((item, index) =>\r\n        <div className={classes.contactCard} style={{color:nonThemeColor}} key={index}>\r\n            <div className={classes.contactIcon} style={{backgroundColor:uiColor}}>{Icons[index]}</div>\r\n            <div className={classes.contactValue}>{item}</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.getInTouch} style={{borderColor:uiColor}}>\r\n            <div className={classes.getInTouchCard}>\r\n                <h1 style={{color:nonThemeColor}}>Get In Touch</h1>\r\n                <p>I would love to hear from you, so whether you need a quote, have a question or just want to say hello, please feel free to drop me a line.</p>\r\n                <div>\r\n                    {contactDetails}\r\n                </div>\r\n            </div>\r\n            <ContactForm/>\r\n        </div>\r\n    )\r\n};\r\nexport default GetInTouch;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;"],"names":["validateValue","enteredValue","setEnteredValue","useState","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","content","isEntering","setIsEntering","enteredName","nameInputHasError","enteredNameIsValid","nameChangedHandler","nameBlurHandler","useInput","trim","enteredPhone","phoneInputHasError","enteredPhoneIsValid","phoneChangedHandler","phoneBlurHandler","length","enteredEmail","emailInputHasError","enteredEmailIsValid","emailChangedHandler","emailBlurHandler","includes","enteredMessage","messageInputHasError","enteredMessageIsValid","messageChangedHandler","messageBlurHandler","formIsValid","btnText","setBtnText","isSent","setIsSent","enteredLName","setEnteredLName","sendMessageHanlder","async","prevValue","fetch","method","body","JSON","stringify","message","finishEnteringHandler","useBlocker","window","confirm","nameInputClasses","classes","Inputs","invalidInput","emailInputClasses","phoneInputClasses","messageInputClasses","formClasses","contactForm","sent","nonThemeColor","useSelector","state","Fragment","className","contactFormCard","style","color","onFocus","action","onSubmit","preventDefault","time","Date","toUTCString","name","email","phone","onBlur","onChange","type","placeholder","disabled","id","minLength","maxLength","sendBtn","Button","props","btn","onClick","children","autoTypeData","firstName","lastName","nickName","mobNo","address","aboutMe","resumeLink","imageUrl","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","data","PersonalData","uiColor","Icons","fontSize","contactDetails","map","item","index","contactCard","contactIcon","backgroundColor","contactValue","getInTouch","borderColor","getInTouchCard"],"sourceRoot":""}