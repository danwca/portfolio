{"version":3,"file":"static/js/2040.a78d1f5a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/DarkMode.js","webpack://personal-portfolio/./src/components/Navbar/colorModal.css?5734","components/Navbar/Routes.js","components/Navbar/Navbar.js","../node_modules/@mui/icons-material/LightMode.js","components/Data/PersonalData.js","webpack://personal-portfolio/./src/components/Navbar/navbar.css?c620","components/Navbar/ColorModal.js","components/Data/ThemeData.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1z\"\n}), 'DarkMode');\nexports.default = _default;","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\n// import { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\r\nfunction Routes(props) {\r\n\r\n    const toggleActive=(index)=>{\r\n        const navs=document.getElementsByClassName(\"navs\");\r\n        console.log(navs.length);\r\n        for(let i=0;i<navs.length;i++){\r\n            navs[i].classList.remove(\"active\");\r\n        };\r\n        navs[index].classList.add(\"active\");\r\n    }\r\n    return (\r\n        <>\r\n        {/* For broswer router replace- \r\n            a -> Navlink\r\n            href - to \r\n            # - / */}\r\n        \r\n            <a href=\"#home\" onClick={props.onClick}>\r\n                <div className=\"navs active\" onClick={()=>toggleActive(0)}>Home</div>\r\n            </a>\r\n            <a href=\"#education\" onClick={props.onClick}>\r\n                <div className=\"navs\" onClick={()=>toggleActive(1)}>Education</div>\r\n            </a>\r\n            <a href=\"#projects\" onClick={props.onClick}>\r\n                <div className=\"navs\" onClick={()=>toggleActive(2)}>Projects</div>\r\n            </a>\r\n            <a href=\"#getInTouch\" onClick={props.onClick}>\r\n                <div className=\"navs\" onClick={()=>toggleActive(3)}>Get In Touch</div>\r\n            </a>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Routes;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport './navbar.css';\r\n\r\nimport { themeActions } from \"../../store/theme\";\r\n\r\nimport ColorModal from \"./ColorModal\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport PersonalData from \"../Data/PersonalData\";\r\n\r\nconst Navbar = ({ content }) => {\r\n\r\n    const menuRef = useRef();\r\n    const dispatch = useDispatch();\r\n    \r\n    const nonThemeColor = useSelector(state => state.nonThemeColor);\r\n    const changeColor = (newColor) => {\r\n        dispatch(themeActions.changeThemeColor(newColor));\r\n    }\r\n\r\n    //const mode = useSelector(state => state.mode);\r\n\tconst mode = useSelector(state => {\r\n\t\tconsole.log(state); // 打印状态\r\n\t\treturn state.mode;\r\n\t});\r\n    //console.log(mode); // 打印状态\r\n    useEffect(()=>{\r\n        if(mode===\"dark\"){\r\n            const lightModeBtn = document.getElementById(\"lightModeBtn\")\r\n            const darkModeBtn = document.getElementById(\"darkModeBtn\")\r\n            lightModeBtn.style.display = \"none\";\r\n            darkModeBtn.style.display = \"block\";\r\n            darkModeBtn.style.color = \"black\";\r\n        }\r\n    },[mode])\r\n    const bgColor = useSelector(state => state.theme.backgroundColor);\r\n    const activeColor = useSelector(state => state.theme.color);\r\n\r\n    // const [mode, setMode] = useState(\"light\");\r\n    const [isDropDownVisible, setIsDropDownVisible] = useState(false);\r\n    const [isColorModalShown, setColorModalShown] = useState(false);\r\n\r\n\r\n    function handleModeChange() {\r\n\r\n        const lightModeBtn = document.getElementById(\"lightModeBtn\")\r\n        const darkModeBtn = document.getElementById(\"darkModeBtn\")\r\n        if (mode === 'light') {\r\n            lightModeBtn.style.display = \"none\";\r\n            darkModeBtn.style.display = \"block\";\r\n            darkModeBtn.style.color = \"black\";\r\n            dispatch(themeActions.setMode(\"dark\"));\r\n        }\r\n        else {\r\n            lightModeBtn.style.display = \"block\";\r\n            darkModeBtn.style.display = \"none\";\r\n            lightModeBtn.style.color = \"white\";\r\n            dispatch(themeActions.setMode(\"light\"));\r\n        }\r\n    }\r\n\r\n    function handleColorSelector() {\r\n        setColorModalShown(prev => !prev);\r\n    }\r\n    function handleDropDown() {\r\n        setIsDropDownVisible((prevValue)=>{\r\n            return !prevValue;\r\n        });\r\n    }\r\n    function handleNavigate(){\r\n        handleDropDown();\r\n            menuRef.current.checked = false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"navbar\" style={{ backgroundColor: bgColor }}>\r\n                <div className=\"logoContainer\">\r\n                    <div id=\"logo\">\r\n                        {PersonalData.firstName}&nbsp;&nbsp;{PersonalData.lastName}\r\n                    </div>\r\n                </div>\r\n                <div className=\"navsContainer\" style={{ color: nonThemeColor }}>\r\n                    <Routes />\r\n                </div>\r\n                <div className=\"selectTheme\">\r\n                    <div className=\"selectMode\" onClick={handleModeChange}>\r\n                        <div id=\"lightModeBtn\" style={{ color: \"white\" }}><LightModeIcon /></div>\r\n                        <div id=\"darkModeBtn\" style={{ display: \"none\" }}><DarkModeIcon /></div>\r\n                    </div>\r\n\r\n                    <div className=\"colorSelector\" onClick={handleColorSelector} style={{ backgroundColor: activeColor }}>\r\n                        {\r\n                            isColorModalShown && <ColorModal selectColor={changeColor} onConfirm={handleColorSelector} />\r\n                        }\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" onClick={()=>handleDropDown()} ref={menuRef} id=\"burger-toggle\" />\r\n                    <label htmlFor=\"burger-toggle\" className=\"burger-menu\">\r\n                        <div className=\"line\"></div>\r\n                        <div className=\"line\"></div>\r\n                        <div className=\"line\"></div>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            {isDropDownVisible && <div className=\"mob-nav\" style={{ color: 'white' }}>\r\n                <Routes onClick={handleNavigate} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z\"\n}), 'LightMode');\nexports.default = _default;","const PersonalData = {\r\n    firstName: \"Daniel\",\r\n    lastName: \"Wang\",\r\n    nickName:\"<  Doctor Dan >\",\r\n    mobNo:\"+1 647-974-1857\",\r\n    email:\"danw.ca@gmail.com\",\r\n    address:\"Canada\",\r\n    aboutMe:\"Hi Everyone, I am Daneil Wang from Toronto, Canada. Worked with libraries & frameworks like ReactJS, NodeJS. Have a keen knowledge of databases like MySQL, MongoDB and Firebase. Eager to contribute to innovative projects and gain hands-on experience in a dynamic and collaborative\",\r\n    resumeLink:'https://drive.google.com/file/d/1vfnzDcN4uATaNZ7cc9kdKvep9ZBUN_be/view?usp=sharing',\r\n    imageUrl:''\r\n}\r\nexport const autoTypeData=['3rd Year IT Grad', 'MERN Stack Developer','Flutter App Developer', 'Open Source Contributor'];\r\nexport default PersonalData;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// import Zoom from '@mui/material/Zoom';\r\nimport ThemeData from \"../Data/ThemeData\"\r\n// import Card from '../UI/Card';\r\n\r\nimport \"./colorModal.css\";\r\n\r\nconst Backdrop = props => {\r\n    return <div className='backdrop' onClick={props.onConfirm}></div>;\r\n}\r\n\r\nfunction ColorModal(props) {\r\n\r\n    const mode=useSelector(state=>state.mode);\r\n    let defaultColors;\r\n    let colorCardBgColor;\r\n    if (mode === 'light') {\r\n        defaultColors = ThemeData.lightBgThemeColors;\r\n        colorCardBgColor='white';\r\n    }\r\n    else {\r\n        defaultColors = ThemeData.darkBgThemeColors;\r\n        colorCardBgColor='black';\r\n    }\r\n\r\n    function handleClick(index) {\r\n        props.selectColor(defaultColors[index]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {createPortal(\r\n                <Backdrop onClick={props.onConfirm} />,\r\n                document.getElementById(\"backdrop\")\r\n            )}\r\n            {createPortal(\r\n                <div className=\"colorCard\" style={{backgroundColor:colorCardBgColor}}>\r\n                    {defaultColors.map((color, index) =>\r\n                        <div key={index} onClick={() => handleClick(index)} style={{ backgroundColor: color }}></div>\r\n                    )}\r\n                </div>,\r\n                document.getElementById('overlay')\r\n            )}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default ColorModal;","\r\nconst lightBgThemeColors = [\"#D65A31\", \"#0D7377\", \"#5432D3\", \"#00A8CC\", \"darkgray\", \"#F037A5\", \"#916BBF\", \"#1EAE98\"];\r\nconst darkBgThemeColors = [\"lightblue\", \"#E6DDC4\", \"lightpink\", \"aquamarine\", \"lightgray\", \"lightgreen\", \"cyan\", \"#D9D7F1\"];\r\nconst extraColors=['purple'];\r\nconst certBgLight='#AAE3E2';\r\nconst certBgDark='#3C84AB';\r\nconst highlightColor='purple';\r\n\r\nconst ThemeData={lightBgThemeColors,darkBgThemeColors,extraColors,certBgLight,certBgDark,highlightColor};\r\nexport default ThemeData;"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","props","toggleActive","index","navs","document","getElementsByClassName","console","log","length","i","classList","remove","add","href","onClick","className","content","menuRef","useRef","dispatch","useDispatch","nonThemeColor","useSelector","state","mode","useEffect","lightModeBtn","getElementById","darkModeBtn","style","display","color","bgColor","theme","backgroundColor","activeColor","isDropDownVisible","setIsDropDownVisible","useState","isColorModalShown","setColorModalShown","handleColorSelector","prev","handleDropDown","prevValue","id","PersonalData","firstName","lastName","themeActions","setMode","selectColor","newColor","changeThemeColor","onConfirm","type","ref","htmlFor","current","checked","autoTypeData","nickName","mobNo","email","address","aboutMe","resumeLink","imageUrl","Backdrop","defaultColors","colorCardBgColor","ThemeData","lightBgThemeColors","darkBgThemeColors","createPortal","map","handleClick","extraColors","certBgLight","certBgDark","highlightColor"],"sourceRoot":""}