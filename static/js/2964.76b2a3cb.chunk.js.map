{"version":3,"file":"static/js/2964.76b2a3cb.chunk.js","mappings":"gKACA,SAAgB,gBAAkB,wC,oGCIlC,MA8CA,EA9CuB,IAAkB,IAAjB,QAAEA,GAAS,EAC/B,MAAMC,GAAgBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,gBA+B7CG,EA5BuBJ,KACzB,MAAMK,EAAiB,GACjBC,EAAQN,EAAQO,MAAM,MAE5B,IAAIC,EAAc,KAqBlB,OAnBAF,EAAMG,SAASC,IACPA,EAAKC,WAAW,iBACZH,GACAH,EAAeO,KAAKJ,GAExBA,EAAc,CAAEK,MAAOH,EAAKI,QAAQ,eAAgB,IAAIC,SACjDL,EAAKC,WAAW,qBACvBH,EAAYQ,WAAaN,EAAKI,QAAQ,oBAAqB,IAAIC,OACxDL,EAAKC,WAAW,eACvBH,EAAYS,KAAOP,EAAKI,QAAQ,cAAe,IAAIC,OAC5CL,EAAKC,WAAW,qBACvBH,EAAYU,SAAWR,EAAKI,QAAQ,kBAAmB,IAAIC,OAC/D,IAGAP,GACAH,EAAeO,KAAKJ,GAGjBH,CAAc,EAGEc,CAAoBnB,GAE/C,OACI,UAAC,WAAc,YACX,eAAIoB,MAAO,CAAEC,MAAOpB,GAAgB,SAAC,oBACrC,gBAAKqB,UAAWC,EAAAA,QAAQC,gBAAgB,SACnCpB,EAAmBqB,KAAI,CAACC,EAAMC,KAC3B,SAAC,UAAiB,CAAaD,KAAMA,GAAbC,SAGnB,C","sources":["webpack://personal-portfolio/./src/components/Certifications/certifications.module.css?6ba5","components/Certifications/Certifications.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"certificateCard\":\"certifications_certificateCard__OXwHy\"};","import React from \"react\";\r\nimport classes from \"./certifications.module.css\";\r\nimport CreateCertificate from \"./CreateCertificate\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Certifications = ({ content }) => {\r\n    const nonThemeColor = useSelector((state) => state.nonThemeColor);\r\n\r\n    // Parse the markdown content into a list of certifications\r\n    const parseCertifications = (content) => {\r\n        const certifications = [];\r\n        const lines = content.split(\"\\n\");\r\n\r\n        let currentCert = null;\r\n\r\n        lines.forEach((line) => {\r\n            if (line.startsWith(\"- **Title**:\")) {\r\n                if (currentCert) {\r\n                    certifications.push(currentCert);\r\n                }\r\n                currentCert = { title: line.replace(\"- **Title**:\", \"\").trim() };\r\n            } else if (line.startsWith(\"- **Instructor**:\")) {\r\n                currentCert.instructor = line.replace(\"- **Instructor**:\", \"\").trim();\r\n            } else if (line.startsWith(\"- **Link**:\")) {\r\n                currentCert.link = line.replace(\"- **Link**:\", \"\").trim();\r\n            } else if (line.startsWith(\"- **Platform**:\")) {\r\n                currentCert.platform = line.replace(\"- **Platform**:\", \"\").trim();\r\n            }\r\n        });\r\n\r\n        if (currentCert) {\r\n            certifications.push(currentCert);\r\n        }\r\n\r\n        return certifications;\r\n    };\r\n\r\n    const certificationsList = parseCertifications(content);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1 style={{ color: nonThemeColor }}>Certifications</h1>\r\n            <div className={classes.certificateCard}>\r\n                {certificationsList.map((item, index) => (\r\n                    <CreateCertificate key={index} item={item} />\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Certifications;"],"names":["content","nonThemeColor","useSelector","state","certificationsList","certifications","lines","split","currentCert","forEach","line","startsWith","push","title","replace","trim","instructor","link","platform","parseCertifications","style","color","className","classes","certificateCard","map","item","index"],"sourceRoot":""}